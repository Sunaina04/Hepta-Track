{"ast":null,"code":"var _s = $RefreshSig$();\nimport { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { useDispatch } from \"react-redux\";\nimport storage from \"redux-persist/lib/storage\";\nimport { FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER, persistReducer, persistStore } from \"redux-persist\";\nimport userReducer from \"./Slice/userSlice\";\nimport { userApi } from \"../Services/UserApi\";\nconst rootReducer = combineReducers({\n  user: userReducer,\n  [userApi.reducerPath]: userApi.reducer\n});\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"user\"]\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  }).concat(userApi.middleware),\n  devTools: true\n});\nexport const persistor = persistStore(store);\nexport const useAppDispatch = () => {\n  _s();\n  return useDispatch();\n};\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"names":["combineReducers","configureStore","useDispatch","storage","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistReducer","persistStore","userReducer","userApi","rootReducer","user","reducerPath","reducer","persistConfig","key","whitelist","persistedReducer","store","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","concat","devTools","persistor","useAppDispatch","_s"],"sources":["/home/dell/MY PROJECTS/Hepta-Track/hepta-track/src/Store/Store.ts"],"sourcesContent":["import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { useDispatch } from \"react-redux\";\nimport storage from \"redux-persist/lib/storage\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n  persistReducer,\n  persistStore,\n  Persistor,\n} from \"redux-persist\";\n\nimport userReducer from \"./Slice/userSlice\";\nimport { userApi } from \"../Services/UserApi\";\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  [userApi.reducerPath]: userApi.reducer,\n});\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"user\"],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(userApi.middleware),\n  devTools: true,\n});\n\nexport const persistor: Persistor = persistStore(store);\nexport type RootState = ReturnType<typeof store.getState>;\nexport const useAppDispatch = () => useDispatch<typeof store.dispatch>();\n"],"mappings":";AAAA,SAASA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAClE,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SACEC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,EACRC,cAAc,EACdC,YAAY,QAEP,eAAe;AAEtB,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,SAASC,OAAO,QAAQ,qBAAqB;AAE7C,MAAMC,WAAW,GAAGd,eAAe,CAAC;EAClCe,IAAI,EAAEH,WAAW;EACjB,CAACC,OAAO,CAACG,WAAW,GAAGH,OAAO,CAACI;AACjC,CAAC,CAAC;AAEF,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXhB,OAAO;EACPiB,SAAS,EAAE,CAAC,MAAM;AACpB,CAAC;AAED,MAAMC,gBAAgB,GAAGX,cAAc,CAACQ,aAAa,EAAEJ,WAAW,CAAC;AAEnE,OAAO,MAAMQ,KAAK,GAAGrB,cAAc,CAAC;EAClCgB,OAAO,EAAEI,gBAAgB;EAEzBE,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACtB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC,CAAC,CAACkB,MAAM,CAACd,OAAO,CAACU,UAAU,CAAC;EAC/BK,QAAQ,EAAE;AACZ,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAoB,GAAGlB,YAAY,CAACW,KAAK,CAAC;AAEvD,OAAO,MAAMQ,cAAc,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAM7B,WAAW,CAAwB,CAAC;AAAA;AAAC6B,EAAA,CAA5DD,cAAc;EAAA,QAAS5B,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}